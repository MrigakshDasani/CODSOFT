# TASK 3 
To create a basic calculator using CSS, HTML, and JavaScript, you'll need to implement an interactive interface with buttons for addition, 
subtraction, multiplication, and division operations. The calculator should have a display screen to show user input and results. Utilize CSS grid system 
for button alignments. Use event listeners, if-else statements, operators, and loops to handle user input and perform calculations.
This project requires some skill but can be done with basic knowledge of these technologies..




# HTML code
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link rel="stylesheet" href="calc.css">
</head>

<body>
    <div class="container">
        <div class="calculator">
            <div class="display">
                <input type="text" id="display" placeholder="" disabled>
            </div>
            <div class="buttons">
                <input type="button" value="7">
                <input type="button" value="8">
                <input type="button" value="9">
                <input type="button" value="+" class="operator">
                <input type="button" value="4">
                <input type="button" value="5">
                <input type="button" value="6">
                <input type="button" value="-" class="operator">
                <input type="button" value="1">
                <input type="button" value="2">
                <input type="button" value="3">
                <input type="button" value="/" class="operator">
                <input type="button" value="0" class="zero">
                <input type="button" value="." class="decimal">
                <input type="button" value="*" class="operator">
                <input type="button" value="AC" class="clear">
                <input type="button" value="=" class="equal">
            </div>
        </div>
    </div>
    <script src="calc.js"></script>
</body>

</html>


# JS CODE
document.addEventListener('DOMContentLoaded', function() {
    const display = document.getElementById('display');
    const buttons = document.querySelectorAll('.buttons input');

    buttons.forEach(button => {
        button.addEventListener('click', () => {
            const value = button.value;=
            if (value === 'AC') {
                clearDisplay();
            } else if (value === '=') {
                calculate();
            } else if (['+', '-', '*', '/'].includes(value)) {
                appendOperator(value);
            } else {
                appendNumber(value);
            }
        });
    });

    function appendNumber(number) {
        display.value += number;
    }

    function appendOperator(operator) {
        display.value += ` ${operator} `;
    }

    function clearDisplay() {
        display.value = '';
    }

    function calculate() {
        try {
            display.value = eval(display.value);
        } catch {
            display.value = 'Error';
        }
    }
});



# CSS CODE
* {
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    box-sizing: border-box;
}

.container {
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #e3f9ff;
}

.calculator {
    padding: 20px;
    border-radius: 10px;
    background: #3a4452;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
}

.display {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 20px;
}

.display input {
    width: 100%;
    height: 60px;
    font-size: 40px;
    text-align: right;
    border: none;
    padding: 10px;
    border-radius: 5px;
    background: #1f252d;
    color: #fff;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.25);
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

.buttons input {
    width: 100%;
    height: 60px;
    font-size: 20px;
    border-radius: 5px;
    border: none;
    background: #505a6b;
    color: #fff;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.buttons input.clear {
    grid-column: span 2;
    background: #f66;
}

.buttons input.equal {
    grid-column: span 2;
    background: #3a86ff;
}

.buttons input.zero {
    grid-column: span 2;
}
