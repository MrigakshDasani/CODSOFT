# TASK 3 












# HTML and Inline JS code
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <link rel="stylesheet" href="calc.css">
</head>

<body>
    <div class="container">
        <div class="calculator">
            <div class="display">
                <input type="text" id="display" disabled>
            </div>
            <div class="buttons">
                <input type="button" value="7" onclick="appendNumber('7')">
                <input type="button" value="8" onclick="appendNumber('8')">
                <input type="button" value="9" onclick="appendNumber('9')">
                <input type="button" value="+" onclick="appendOperator('+')">
                <input type="button" value="4" onclick="appendNumber('4')">
                <input type="button" value="5" onclick="appendNumber('5')">
                <input type="button" value="6" onclick="appendNumber('6')">
                <input type="button" value="-" onclick="appendOperator('-')">
                <input type="button" value="1" onclick="appendNumber('1')">
                <input type="button" value="2" onclick="appendNumber('2')">
                <input type="button" value="/" onclick="appendOperator('/')">
                <input type="button" value="*" onclick="appendOperator('*')">
                <input type="button" value="3" onclick="appendNumber('3')">
                <input type="button" value="0" onclick="appendNumber('0')" class="zero">
                <input type="button" value="." onclick="appendNumber('.')">
                <input type="button" value="AC" onclick="clearDisplay()" class="clear">
                <input type="button" value="=" onclick="calculate()" class="equal">
            </div>
        </div>
    </div>

    <script>
        const display = document.getElementById('display');

        function appendNumber(number) {
            display.value += number;
        }

        function appendOperator(operator) {
            display.value += ` ${operator} `;
        }

        function clearDisplay() {
            display.value = '';
        }

        function calculate() {
            try {
                display.value = eval(display.value);
            } catch {
                display.value = 'Error';
            }
        }
    </script>
</body>

</html>


# CSS CODE
* {
    margin: 0;
    padding: 0;
    font-family: Arial, Helvetica, sans-serif;
    box-sizing: border-box;
}

.container {
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #e3f9ff;
}

.calculator {
    padding: 20px;
    border-radius: 10px;
    background: #3a4452;
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
}

.display {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 20px;
}

.display input {
    width: 100%;
    height: 60px;
    font-size: 40px;
    text-align: right;
    border: none;
    padding: 10px;
    border-radius: 5px;
    background: #1f252d;
    color: #fff;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.25);
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px;
}

.buttons input {
    width: 100%;
    height: 60px;
    font-size: 20px;
    border-radius: 5px;
    border: none;
    background: #505a6b;
    color: #fff;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.buttons input.clear {
    grid-column: span 2;
    background: #f66;
}

.buttons input.equal {
    grid-column: span 2;
    background: #3a86ff;
}

.buttons input.zero {
    grid-column: span 2;
}
